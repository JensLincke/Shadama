program "DeGauss"
breed Pict (x, y, r, g, b, a, origX, origY, origR, origG, origB, origA)
breed Filler (x, y, r, g, b, a)
breed Button (x, y, r, g, b, a)
patch Blur (level)
  
def move(x, y) {
  this.x = this.x + x;
  this.y = this.y + y;
}

def remember1() {
  this.origX = this.x;
  this.origY = this.y;
  this.origR = this.r;
  this.origG = this.g;
  this.origB = this.b;
  this.origA = this.a;
}

def storeBlur(blur) {
  blur.level = this.r;
}

def restore() {
  this.x = this.origX;
  this.y = this.origY;
  this.r = this.origR;
  this.g = this.origG;
  this.b = this.origB;
  this.a = this.origA;
}

def colorize2(blur) {
  var p = blur.level;
  this.r = this.origB + this.origG * (1.0 - p);
  this.g = this.origB * (1.0 - p);
  this.b = this.origB * p + this.origG * (1.0 - p);
  this.a = this.origA;
}

def colorize3() {
  this.x = this.origX;
  this.y = this.origY;
}

def degauss(step, begin) {
  var x = step * 50.0;
  var off = step - begin;
  if (step - begin > 0.4) {
    var arg = -3 - off;
    x = x + (this.origY - 128) / 100.0 + (this.origX -128) / 100.0 * sin(step) * 3;
    var c = cos(x) * exp(arg);
    var s = sin(x) * exp(arg);
  
    this.x = this.origX + (this.origX - 128) * c;
    this.y = this.origY + (this.origY - 128) * s;
  }
}

def degaussColor(step, begin) {
  this.r = this.r - (this.r - this.origR) * 0.01;
  this.g = this.g - (this.g - this.origG) * 0.01;
}
  
static setup() {
  Pict.fillImage("x", "y", "r", "g", "b", "a", windows);
  Pict.remember1();
  Filler.fillImage("x", "y", "r", "g", "b", "a", blurBig);
  Filler.storeBlur(Blur);
  Button.fillImage("x", "y", "r", "g", "b", "a", button);
  Button.move(760, 260);

  Pict.colorize2(Blur);
  Pict.draw();
  var begin = -1;
  var showButton = 0;
}

static rrestore() {
  Pict.restore();
}

static loop() {
  if (mousemove.x > 950) {
    if (showButton == 0) {
      showButton = 1;
    }
    if (mousemove.y < 300) {
      if (begin == -1) {
        begin = time;
        Display.playSound("degauss");
      }
    }
  }
  if (begin != -1) {
    Pict.degauss(time, begin);
    Pict.degaussColor(time, begin);
  }
  Pict.draw();
  if (showButton == 1) {
     Button.draw();
  }
}
