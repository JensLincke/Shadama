program "DeGauss"
breed Pict (x, y, r, g, b, a, origX, origY, origR, origG, origB, origA)
breed Filler (x, y, r, g, b, a)
patch Blur (level)

def remember1() {
  this.origX = this.x;
  this.origY = this.y;
  this.origR = this.r;
  this.origG = this.g;
  this.origB = this.b;
  this.origA = this.a;
}

def storeBlur(blur) {
  blur.level = this.r;
}

def restore() {
  this.x = this.origX;
  this.y = this.origY;
  this.r = this.origR;
  this.g = this.origG;
  this.b = this.origB;
  this.a = this.origA;
}

def colorize2(blur) {
  var p = blur.level;
  this.r = this.origG * p + this.origR * (1.0 - p);
  this.g = this.origB;
  this.b = this.origG * p + this.origB * (1.0 - p);
  this.a = this.origA;
}

def colorize3() {
  this.x = this.origX;
  this.y = this.origY;
}

def degauss(step, begin) {
  var x = step * 50.0;
  var off = step - begin;
  if (step - begin > 0.4) {
    var arg = -3 - off;
    x = x + (this.origY - 128) / 100.0 + (this.origX -128) / 100.0 * sin(step) * 3;
    var c = cos(x) * exp(arg);
    var s = sin(x) * exp(arg);
  
    this.x = this.origX + (this.origX - 128) * c;
    this.y = this.origY + (this.origY - 128) * s;
  }
}

def degaussColor(step, begin) {
  this.r = this.r - (this.r - this.origR) * 0.02;
  this.g = this.g - (this.g - this.origG) * 0.02;
}
  
static setup() {
  Pict.fillImage("x", "y", "r", "g", "b", "a", modelT);
  Pict.remember1();
  Filler.fillImage("x", "y", "r", "g", "b", "a", blurBig);
  Filler.storeBlur(Blur);
  Pict.colorize2(Blur);
  Pict.draw();
  var begin = null;
}

static rrestore() {
  Pict.restore();
}

static loop() {

  if (mousemove.x > 505) {
    if (begin == null) {
      begin = time;
      Display.playSound("degauss");
    }
    Pict.degauss(time, begin);
    Pict.degaussColor(time, begin);
  }
  Pict.draw();
}
